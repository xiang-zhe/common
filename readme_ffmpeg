ffmepg
  -codec == -c
        Select an encoder (when used before an output file) or a decoder (when used before an input file) for one or more streams. 
        codec is the name of a decoder/encoder or a special value copy (output only) to indicate that the stream is not to be re-encoded.
  -vcodec == -codec:v == -c:v
  -acodec == -codec:a == -c:a

参考：https://www.jianshu.com/p/4f399b9dfb43
查阅：
ffmpeg -i {video}

查看win10：
  设备：
  ffmpeg -list_devices true -f dshow -i dummy
  查看摄像头输出格式：
  ffmpeg -list_options true -f dshow -i video="Game Capture 4K60 Pro MK.2 Video"
  查看摄像头输出格式：
  ffprobe -show_format -f dshow -i video="Game Capture 4K60 Pro MK.2 Video"
  显示摄像头：
  ffplay -f dshow -i video="OBS Virtual Camera" 

查看设备：
    ./ffmpeg -hide_banner -devices
打开摄像头：


截图：
bin/ffmpeg -ss 00:00:06 -i {} -f image2 -vframes 1 -y {}.jpg

截取视频：
  bin/ffmpeg -i '{}' -ss 00:01:00 -to 00:01:05 -c copy {}
  精确时间剪切：
  ffmpeg -ss 00:00:44 -to 00:01:24 -accurate_seek -i '.mkv' -c copy -avoid_negative_ts 1 44_124.mkv
    -ss -t -to在-i 之前可以避免开头黑屏
    -accurate_seek 精确时间
    -avoid_negative_ts 1 使用copy编码时候加上这个参数
  

转码：
ffmpeg -i out.ogv -vcodec h264 out.mp4  -vcodec 后面是编码格式，h264 最佳，但Windows不安装。如是 ppt 的视频，选择 wmv1 或 wmv2
bin/ffmpeg  -hwaccel cuvid -hwaccel_device 0 -c:v h264_cuvid -i {} -ss 00:00:00 -t 01:00:00 -c:v h264_nvenc -y {}.mp4
ffmpeg -i {}.avi -c copy -map 0 -y {}.mp4（未压缩）
ffmpeg -i {}.avi -c:v libx264 -crf 19 -preset slow -c:a aac -b:a 192k -ac 2 -y  {}.mp4

图片转视频：-r = fps
ffmpeg -r 10 -i images/%d.png -b:v 1500k -vcodec wmv2 sumo.wmv

加速4倍
ffmpeg -i TheOrigin.mp4 -vf  "setpts=0.25*PTS" UpTheOrigin.mp4
减速4倍
ffmpeg -i TheOrigin.mp4 -vf  "setpts=4*PTS" UpTheOrigin.mp4

音频处理
  1.1.提取音频
  ffmpeg -i test.mp4 -acodec copy -vn output.aac
    -acodec copy 复制音频
    -vn 命令删除视频
  1.2.提取音频并重新编码
  ffmpeg -i videoWithAudio.mp4 -vn -c:a libmp3lame -q:a 1 onlyAudio.mp3
    -c:a == -acodec
    libmp3lame 命令将音频编码为不同的质量，-q:a表示质量，范围为0~6，其中0表示高质量音频
  2.删除音频（只将视频复制到一个新的文件中，而不复制音频）
  ffmpeg -i videoWithAudio.mp4 -c:v copy -an videoWithoutAudio.mp4
    -c:v copy 命令复制视频
    -an 命令删除音频
  3.添加音频
  ffmpeg  -i video.mp4 -i audio.mp3 -c copy -map 0:v:0 -map 1:a:0 videoWithAudio.mp4
    -c copy同时复制音轨和视轨到输出文件
    -map 命令用法input_file_index:stream_type_specifier:stream_index
      例如：-map 1:a:2来选择第二个输入文件中的第三个音轨，因为计数从0开始
      另外还有绝对流表示方式，不指定流类型
        -map 0:0  第一个输入文件的第一个流
        -map 1:3  第二个输入文件的第四个流
    -map 0:v:0 选择了第0个输入文件的（视频输入）的第0个轨道。
    –map 1:a:0 选择了第一个输入文件的（音频输入）的第0个轨道
    减法map命令（在map命令的参数前加负号）。使用-map -0:a:0 这一命令，FFmpeg在选择时就会忽略第一个音轨
        例如 ffmpeg -i videoWithAudio.mp4 -map 0 -map -0:a videoWithoutAudio.mp4同样是删除音频的效果
        -map 0 -map -0:s  将从输入索引 #0（第一个输入）中选择除字幕之外的所有流。-指负映射。
  4.替换视频中的音频
  ffmpeg -i video_with_audio.mp4 -i newAudio.wav -map 0:0 -map 1:0 -c:v copy -c:a libmp3lame -q:a 1 -shortest video_with_newAudio.mp4
    -shortest 命令用于确保当达到较短的输入文件（两个输入文件之一）长度时停止转换
    
滤波器
  ffmpeg -stream_loop -1 -i "1.mp4" -i "2.mp4"  -stream_loop -1 -i "3.mp4" -filter_complex vstack=inputs=3 -map 0:v -map 1 -map 2:v -shortest vstack.mp4
    -filter_complex vstack=inputs=3 垂直叠加vstack
    -stream_loop -1 放在输入前，-1表示无限循环，-loop 1好像也是一样的
    -shortest 输入最短结束 -longest
    -t 60 表示循环到60s
